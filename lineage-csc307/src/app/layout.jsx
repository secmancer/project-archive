import { Geist, Geist_Mono } from "next/font/google";
import { ClerkProvider } from "@clerk/nextjs";
import Navbar from "@/components/navbar";
import "./globals.css";
import { auth, currentUser, clerkClient } from "@clerk/nextjs/server";
import axios from "axios";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Lineage",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }) {
  const { userId } = await auth();
  const client = await clerkClient();

  // If user is signed in, check the user metadata
  if (userId) {
    const user = await currentUser();
    // if the user metadata has a key called "created_in_db" and it is true, then do nothing
    if (!user.publicMetadata.created_in_db) {
      // otherwise make an api call to create the user in the database
      try {
        // Update the user's public metadata to indicate they've been created in the database
        const response = await axios.post(
          "http://lineage-server-1:3000/api/user",
          {
            id: userId,
          },
        );

        if (response.status === 200) {
          await client.users.updateUserMetadata(userId, {
            publicMetadata: {
              created_in_db: true,
            },
          });
        }
      } catch (error) {
        console.error("Error creating user in database:", error);
      }
    }
  }

  return (
    <ClerkProvider>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <Navbar>{children}</Navbar>
        </body>
      </html>
    </ClerkProvider>
  );
}
